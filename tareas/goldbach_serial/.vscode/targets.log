make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.3
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Thu May 26 20:46:48 2022

# Variables

# environment
GDK_BACKEND = x11
# environment
LC_ALL = C
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# environment
SSH_AGENT_LAUNCHER = gnome-keyring
# makefile (from 'makefile', line 42)
OBJECTX = $(SOURCEX:$(SRC_DIR)/%.cpp=$(OBJ_DIR)/%.o)
# environment
SNAP_INSTANCE_KEY = 
# environment
GJS_DEBUG_OUTPUT = stderr
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-b2a1c035-36cd-4d02-8081-8f58fd802405.sock
# makefile (from 'makefile', line 23)
SRC_DIR = src
# environment
LC_NAME = es_CR.UTF-8
# environment
LC_NUMERIC = es_CR.UTF-8
# makefile (from 'makefile', line 38)
INPUTFC = $(strip $(HEADERC) $(SOURCEC))
# environment
VSCODE_CWD = /home/daniel
# makefile (from 'makefile', line 13)
LIBS = 
# environment
LC_ADDRESS = es_CR.UTF-8
# default
MAKE_COMMAND := make
# environment
QT_ACCESSIBILITY = 1
# makefile (from 'makefile', line 15)
LINTC = $(LINTF),-readability/casting
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
SNAP_INSTANCE_NAME = code
# makefile (from 'makefile', line 21)
OBJ_DIR = build
# environment
GDK_PIXBUF_MODULEDIR = /snap/code/97/usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders
# makefile (from 'makefile', line 6)
DEFS = 
# makefile (from 'makefile', line 44)
TESTINF = $(wildcard $(TST_DIR)/input*.txt)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# environment
PWD = /home/daniel/Documents/GitHub/Paralela22A-Daniel-Lizano/tareas/goldbach_serial
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# makefile (from 'makefile', line 9)
FLAG = 
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
VSCODE_LOG_STACK = false
# automatic
%F = $(notdir $%)
# environment
VSCODE_CODE_CACHE_PATH = /home/daniel/.config/Code/CachedData/c3511e6c69bb39013c4a4b7b9566ec1ca73fc4d5
# environment
LANG = C
# environment
XAUTHORITY = /run/user/1000/.mutter-Xwaylandauth.FWU1M1
# default
.LOADED := 
# default
.INCLUDE_DIRS = /usr/local/include /usr/include /usr/include
# makefile
MAKEFLAGS = pqrR
# makefile (from 'makefile', line 14)
LINTF = -build/header_guard,-build/include_subdir
# makefile
CURDIR := /home/daniel/Documents/GitHub/Paralela22A-Daniel-Lizano/tareas/goldbach_serial
# makefile (from 'makefile', line 47)
DEPENDS = $(OBJECTS:%.o=%.d)
# environment
VSCODE_PIPE_LOGGING = true
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'makefile', line 32)
DIRS = $(shell find -L $(SRC_DIR) -type d)
# environment
MFLAGS = -pqrR
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# default
.SHELLFLAGS := -c
# environment
WAYLAND_DISPLAY = wayland-0
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
XDG_SESSION_DESKTOP = ubuntu
# makefile (from 'build/sumas.d', line 1)
MAKEFILE_LIST := makefile build/arreglo_de_datos.d build/entrada.d build/main.d build/sumas.d
# environment
SNAP_REEXEC = 
# automatic
@F = $(notdir $@)
# makefile (from 'makefile', line 34)
HEADERC = $(wildcard $(DIRS:%=%/*.h))
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
VSCODE_PID = 8650
# makefile (from 'makefile', line 5)
XC = g++
# environment
XDG_SESSION_TYPE = wayland
# makefile (from 'makefile', line 33)
APPNAME = $(shell basename $(shell pwd))
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'makefile', line 36)
SOURCEC = $(wildcard $(DIRS:%=%/*.c))
# environment
BAMF_DESKTOP_FILE_HINT = /var/lib/snapd/desktop/applications/code_code.desktop
# makefile (from 'makefile', line 10)
FLAGS = $(strip -Wall -Wextra -pthread $(DEFS))
# environment
SESSION_MANAGER = local/daniel-virtual-machine:@/tmp/.ICE-unix/1282,unix/daniel-virtual-machine:/tmp/.ICE-unix/1282
# automatic
*F = $(notdir $*)
# environment
CHROME_DESKTOP = code-url-handler.desktop
# makefile (from 'makefile', line 7)
CSTD = -std=gnu11
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# makefile (from 'makefile', line 48)
IGNORES = $(BIN_DIR) $(OBJ_DIR) $(DOC_DIR)
# automatic
<D = $(patsubst %/,%,$(dir $<))
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# makefile (from 'makefile', line 46)
INCLUDE = $(DIRS:%=-I%)
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# makefile
SHELL = /bin/sh
# default
MAKECMDGOALS := all
# environment
XMODIFIERS = @im=ibus
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# environment
SHLVL = 0
# makefile (from 'makefile', line 22)
DOC_DIR = doc
# makefile (from 'makefile', line 8)
XSTD = -std=gnu++11
# makefile (from 'makefile', line 17)
ARGS = 
# environment
MAKELEVEL := 0
# environment
IM_CONFIG_CHECK_ENV = 1
# default
MAKE = $(MAKE_COMMAND)
# environment
SNAP_COOKIE = UORXvpokl_AXar0BTEUJ4vVU1bqlqURRtqJrOuAwgAJw1xgLZY7Q
# environment
PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin
# default
MAKEFILES := 
# environment
LANGUAGE = en_US:
# makefile (from 'makefile', line 35)
HEADERX = $(wildcard $(DIRS:%=%/*.hpp))
# environment
LC_MONETARY = es_CR.UTF-8
# automatic
^F = $(notdir $^)
# environment
SNAP_USER_COMMON = /home/daniel/snap/code/common
# makefile (from 'makefile', line 49)
EXEFILE = $(BIN_DIR)/$(APPNAME)
# environment
LC_TIME = es_CR.UTF-8
# makefile (from 'makefile', line 40)
INPUTCX = $(strip $(INPUTFC) $(INPUTFX))
# environment
SNAP = /snap/code/97
# environment
INVOCATION_ID = 807184aedb66403db35b8271812d13ea
# environment
SNAP_REVISION = 97
# environment
SNAP_REAL_HOME = /home/daniel
# environment
VSCODE_LOG_NATIVE = false
# environment
USERNAME = daniel
# environment
GNOME_SETUP_DISPLAY = :1
# environment
LC_TELEPHONE = es_CR.UTF-8
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# automatic
?F = $(notdir $?)
# environment
XDG_CURRENT_DESKTOP = Unity
# environment
LS_COLORS = 
# automatic
+F = $(notdir $+)
# environment
DESKTOP_SESSION = ubuntu
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# makefile (from 'makefile', line 43)
OBJECTS = $(strip $(OBJECTC) $(OBJECTX))
# 'override' directive
GNUMAKEFLAGS := 
# environment
LOGNAME = daniel
# environment
GIO_LAUNCHED_DESKTOP_FILE = /var/lib/snapd/desktop/applications/code_code.desktop
# environment
SNAP_ARCH = amd64
# makefile
.DEFAULT_GOAL := default
# environment
SYSTEMD_EXEC_PID = 1324
# environment
DISPLAY = :0
# environment
USER = daniel
# environment
GTK_MODULES = gail:atk-bridge
# default
MAKE_VERSION := 4.3
# 'override' directive
.SHELLSTATUS := 0
# environment
DISABLE_WAYLAND = 1
# environment
SNAP_DATA = /var/snap/code/97
# environment
SNAP_CONTEXT = UORXvpokl_AXar0BTEUJ4vVU1bqlqURRtqJrOuAwgAJw1xgLZY7Q
# makefile (from 'makefile', line 39)
INPUTFX = $(strip $(HEADERX) $(SOURCEX))
# environment
MANAGERPID = 1124
# environment
LC_MEASUREMENT = es_CR.UTF-8
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 8608
 
# environment
_ = /snap/code/97/usr/share/code/code
# environment
LC_PAPER = es_CR.UTF-8
# environment
XDG_RUNTIME_DIR = /run/user/1000
# makefile (from 'makefile', line 12)
FLAGX = $(FLAGS) $(XSTD)
# environment
GDK_PIXBUF_MODULE_FILE = /home/daniel/snap/code/common/.cache/gdk-pixbuf-loaders.cache
# environment
JOURNAL_STREAM = 8:39306
# environment
XDG_SESSION_CLASS = user
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/daniel
# environment
QT_IM_MODULE = ibus
# makefile (from 'makefile', line 20)
BIN_DIR = bin
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-419f9acc-1.67.2-main.sock
# environment
SNAP_NAME = code
# environment
GSETTINGS_SCHEMA_DIR = /snap/code/97/usr/share/glib-2.0/schemas
# makefile (from 'makefile', line 24)
TST_DIR = tests
# makefile (from 'makefile', line 41)
OBJECTC = $(SOURCEC:$(SRC_DIR)/%.c=$(OBJ_DIR)/%.o)
# makefile (from 'makefile', line 11)
FLAGC = $(FLAGS) $(CSTD)
# makefile (from 'makefile', line 50)
EXEARGS = $(strip $(EXEFILE) $(ARGS))
# environment
IM_CONFIG_PHASE = 1
# makefile (from 'makefile', line 45)
TESTOUT = $(TESTINF:$(TST_DIR)/input%.txt=$(OBJ_DIR)/output%.txt)
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# environment
SNAP_VERSION = c3511e6c
# makefile (from 'makefile', line 37)
SOURCEX = $(wildcard $(DIRS:%=%/*.cpp))
# default
SUFFIXES := 
# makefile (from 'makefile', line 51)
LD = $(if $(SOURCEC),$(CC),$(XC))
# environment
VSCODE_CLI = 1
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# makefile (from 'makefile', line 16)
LINTX = $(LINTF),-build/c++11,-runtime/references
# environment
SNAP_COMMON = /var/snap/code/common
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink load
# makefile (from 'makefile', line 4)
CC = gcc
# environment
SNAP_USER_DATA = /home/daniel/snap/code/97
# environment
XDG_MENU_PREFIX = gnome-
# environment
GDMSESSION = ubuntu
# environment
LC_IDENTIFICATION = es_CR.UTF-8
# environment
SNAP_LIBRARY_PATH = /var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void
# variable set hash-table stats:
# Load=172/1024=17%, Rehash=0, Collisions=28/417=7%

# Pattern-specific Variable Values

build/output%.txt :
# makefile (from 'makefile', line 95)
# SHELL := /bin/bash

# 1 pattern-specific variable values
# Directories

# src (device 2051, inode 920710): 9 files, no impossibilities.
# . (device 2051, inode 920700): 13 files, no impossibilities.
# tests: could not be stat'd.

# 22 files, no impossibilities in 3 directories.

# Implicit Rules

build/%.o: src/%.c | $(@D)/.
#  recipe to execute (from 'makefile', line 80):
	$(CC) -c $(FLAGC) $(INCLUDE) -MMD $< -o $@

build/%.o: src/%.cpp | $(@D)/.
#  recipe to execute (from 'makefile', line 84):
	$(XC) -c $(FLAGX) $(INCLUDE) -MMD $< -o $@

%/.:
#  recipe to execute (from 'makefile', line 89):
	mkdir -p $(dir $@)

build/output%.txt: tests/input%.txt tests/output%.txt
#  recipe to execute (from 'makefile', line 97):
	icdiff --no-headers $(word 2,$^) <($(EXEARGS) < $<)

# 4 implicit rules, 0 (0.0%) terminal.
# Files

helgrind: bin/goldbach_serial
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 121):
	valgrind --quiet --tool=helgrind $(EXEARGS)

# Not a target:
src/arreglo_de_datos.h:
#  Implicit rule search has been done.
#  Last modified 2022-05-25 23:38:32.917844084
#  File has been updated.
#  Successfully updated.

bin/goldbach_serial: build/arreglo_de_datos.o build/entrada.o build/main.o build/sumas.o | bin/.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  Modification time never checked.
#  File has not been updated.
# automatic
# @ := bin/goldbach_serial
# automatic
# * := 
# automatic
# < := 
# automatic
# + := 
# automatic
# % := 
# automatic
# ^ := 
# automatic
# ? := 
# automatic
# | := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/11=9%
#  recipe to execute (from 'makefile', line 76):
	$(LD) $(FLAGS) $(INCLUDE) $^ -lm -o $@ $(LIBS)

# Not a target:
build/entrada.d:
#  Implicit rule search has been done.
#  Last modified 2022-05-26 20:44:50.585090486
#  File has been updated.
#  Successfully updated.

lint:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 108):
	cpplint --filter=$(LINTC) $(INPUTFC)

instdeps:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 131):
	sudo apt install build-essential clang valgrind icdiff doxygen graphviz \
	python3-pip python3-gpg && sudo pip3 install cpplint

# makefile (from 'makefile', line 66)
tsan: FLAGS += -fsanitize=thread
tsan: debug
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/3=0%

default: debug
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
build/arreglo_de_datos.d:
#  Implicit rule search has been done.
#  Last modified 2022-05-26 20:44:50.553090555
#  File has been updated.
#  Successfully updated.

# Not a target:
*.mk:
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Failed to be updated.

.PRECIOUS: %/.
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# makefile (from 'makefile', line 62)
msan: FLAGS += -fsanitize=memory
# makefile (from 'makefile', line 63)
msan: CC = clang
# makefile (from 'makefile', line 64)
msan: XC = clang++
msan: debug
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
# variable set hash-table stats:
# Load=3/32=9%, Rehash=0, Collisions=1/5=20%

# makefile (from 'makefile', line 56)
debug: FLAGS += -g
debug: bin/goldbach_serial
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/3=0%

# Not a target:
bin/.:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 127):
	rm -rf $(IGNORES)

# Not a target:
src/arreglo_de_datos.c:
#  Implicit rule search has been done.
#  Last modified 2022-05-25 23:38:32.917844084
#  File has been updated.
#  Successfully updated.

# makefile (from 'makefile', line 68)
ubsan: FLAGS += -fsanitize=undefined
ubsan: debug
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/3=0%

build/sumas.o: src/sumas.c src/sumas.h src/arreglo_de_datos.h
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
src/main.c:
#  Implicit rule search has been done.
#  Last modified 2022-05-25 23:38:32.917844084
#  File has been updated.
#  Successfully updated.

# Not a target:
%/.:
 
#  Precious file (prerequisite of .PRECIOUS).
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
build/sumas.d:
#  Implicit rule search has been done.
#  Last modified 2022-05-26 20:44:50.649090347
#  File has been updated.
#  Successfully updated.

# Not a target:
src/sumas.c:
#  Implicit rule search has been done.
#  Last modified 2022-05-25 23:38:32.917844084
#  File has been updated.
#  Successfully updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all: doc lint memcheck helgrind test
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/3=0%

doc: src/arreglo_de_datos.h src/entrada.h src/sumas.h src/arreglo_de_datos.c src/entrada.c src/main.c src/sumas.c
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := doc
# automatic
# * := 
# automatic
# < := src/arreglo_de_datos.h
# automatic
# + := src/arreglo_de_datos.h src/entrada.h src/sumas.h src/arreglo_de_datos.c src/entrada.c src/main.c src/sumas.c
# automatic
# % := 
# automatic
# ^ := src/arreglo_de_datos.h src/entrada.h src/sumas.h src/arreglo_de_datos.c src/entrada.c src/main.c src/sumas.c
# automatic
# ? := src/arreglo_de_datos.h src/entrada.h src/sumas.h src/arreglo_de_datos.c src/entrada.c src/main.c src/sumas.c
# automatic
# | := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/11=9%
#  recipe to execute (from 'makefile', line 101):
	doxygen

run: bin/goldbach_serial
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 115):
	$(EXEARGS)

help:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 135):
	@echo "Usage make [-jN] [VAR=value] [target]"
	@echo "  -jN       Compile N files simultaneously [N=1]"
	@echo "  VAR=value Overrides a variable, e.g CC=mpicc DEFS=-DGUI"
	@echo "  all       Run targets: doc lint [memcheck helgrind] test"
	@echo "  asan      Build for detecting memory leaks and invalid accesses"
	@echo "  clean     Remove generated directories and files"
	@echo "  debug     Build an executable for debugging [default]"
	@echo "  doc       Generate documentation from sources with Doxygen"
	@echo "  gitignore Generate a .gitignore file"
	@echo "  helgrind  Run executable for detecting thread errors with Valgrind"
	@echo "  instdeps  Install needed packages on Debian-based distributions"
	@echo "  lint      Check code style conformance using Cpplint"
	@echo "  memcheck  Run executable for detecting memory errors with Valgrind"
	@echo "  msan      Build for detecting uninitialized memory usage"
	@echo "  release   Build an optimized executable"
	@echo "  run       Run executable using ARGS value as arguments"
	@echo "  test      Run executable against test cases in folder tests/"
	@echo "  tsan      Build for detecting thread errors, e.g race conditions"
	@echo "  ubsan     Build for detecting undefined behavior"

gitignore:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 124):
	echo $(IGNORES) | tr " " "\n" > .gitignore

# Not a target:
src/sumas.h:
#  Implicit rule search has been done.
#  Last modified 2022-05-25 23:38:32.917844084
#  File has been updated.
#  Successfully updated.

build/entrada.o: src/entrada.c src/entrada.h src/arreglo_de_datos.h src/sumas.h
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

memcheck: bin/goldbach_serial
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'makefile', line 118):
	valgrind --tool=memcheck $(EXEARGS)

# Not a target:
build/main.d:
#  Implicit rule search has been done.
#  Last modified 2022-05-26 20:44:50.613090425
#  File has been updated.
#  Successfully updated.

test: bin/goldbach_serial
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
makefile:
#  Implicit rule search has been done.
#  Last modified 2022-05-26 20:33:52.179653592
#  File has been updated.
#  Successfully updated.

# Not a target:
src/entrada.h:
#  Implicit rule search has been done.
#  Last modified 2022-05-25 23:38:32.917844084
#  File has been updated.
#  Successfully updated.

# Not a target:
src/entrada.c:
#  Implicit rule search has been done.
#  Last modified 2022-05-25 23:55:53.265999984
#  File has been updated.
#  Successfully updated.

build/arreglo_de_datos.o: src/arreglo_de_datos.c src/arreglo_de_datos.h
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.SECONDEXPANSION:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# makefile (from 'makefile', line 60)
asan: FLAGS += -fsanitize=address -fno-omit-frame-pointer
asan: debug
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/3=0%

# makefile (from 'makefile', line 58)
release: FLAGS += -O3 -DNDEBUG
release: bin/goldbach_serial
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
# variable set hash-table stats:
# Load=1/32=3%, Rehash=0, Collisions=0/3=0%

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build/main.o: src/main.c src/entrada.h src/arreglo_de_datos.h
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PHONY: test lint run memcheck helgrind gitignore clean instdeps
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=43/1024=4%, Rehash=0, Collisions=6/136=4%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 68 / storage = 708 B / avg = 10 B
# current buf: size = 8162 B / used = 708 B / count = 68 / avg = 10 B

# strcache performance: lookups = 168 / hit rate = 59%
# hash-table stats:
# Load=68/8192=1%, Rehash=0, Collisions=0/168=0%
# Finished Make data base on Thu May 26 20:46:48 2022

 
